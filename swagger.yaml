openapi: 3.0.0
info:
  title: Carpincho Gym Management API
  description: Gym Management API
  version: 1.0.0
servers:
  - url: http://localhost:3000/api
    description: Local development server
  - url: https://fit-go-api.onrender.com/api
    description: Render development server
paths:
  /users/register:
    post:
      summary: Register a new user
      tags:
        - Registration
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The first name of the user
                lastName:
                  type: string
                  description: The last name of the user
                email:
                  type: string
                  description: The email address of the user
                password:
                  type: string
                  description: The password for the user
                phone:
                  type: string
                  description: The phone number of the user
                personalId:
                  type: string
                  description: >-
                    The personal ID of the user (e.g., social security number,
                    national ID)
                roles:
                  type: array
                  items:
                    type: string
                  description: "The roles the user has (e.g., admin, member)"
      responses:
        "201":
          description: User registered successfully
        "400":
          description: "Bad request (e.g., missing or invalid fields)"
        "500":
          description: Internal server error
  /users:
    get:
      summary: Retrieve all users
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
          description: Number of records per page
      responses:
        "200":
          description: Users retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalUsers:
                    type: integer
                  totalPages:
                    type: integer
                  currentPage:
                    type: integer
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
        "400":
          description: "Bad request (e.g., missing or invalid fields)"
        "401":
          description: "Unauthorized (e.g., invalid token)"
        "500":
          description: Internal server error
  /users/login:
    post:
      summary: Authenticate and login a user
      tags:
        - Authentication
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email address of the user
                password:
                  type: string
                  description: The password for the user
      responses:
        "200":
          description: User authenticated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: The JWT token for the authenticated user
        "400":
          description: "Bad request (e.g., missing or invalid fields)"
        "401":
          description: "Unauthorized (e.g., invalid email or password)"
        "500":
          description: Internal server error
  /gyms:
    post:
      summary: Create a new gym
      tags:
        - Gyms
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                admins:
                  type: array
                  items:
                    type: string
                  description: An array of user IDs representing the gym's admins
                name:
                  type: string
                  description: The name of the gym
                location:
                  type: object
                  properties:
                    latitude:
                      type: number
                      description: The latitude of the gym's location
                    longitude:
                      type: number
                      description: The longitude of the gym's location
                    placeId:
                      type: string
                      description: The Google Maps place ID of the gym's location
      responses:
        "201":
          description: Gym created successfully
        "400":
          description: "Bad request (e.g., missing or invalid fields)"
        "500":
          description: Internal server error
    get:
      summary: Retrieve all gyms
      tags:
        - Gyms
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: Partial or full name of the gym to search
        - in: query
          name: page
          schema:
            type: integer
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
          description: Number of records per page
      responses:
        "200":
          description: Gyms retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalGyms:
                    type: integer
                  totalPages:
                    type: integer
                  currentPage:
                    type: integer
                  gyms:
                    type: array
                    items:
                      $ref: "#/components/schemas/Gym"
        "500":
          description: Internal server error
  /gyms/{id}:
    get:
      summary: Retrieve a specific gym
      tags:
        - Gyms
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The ID of the gym to retrieve
      responses:
        "200":
          description: Gym retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Gym"
        "404":
          description: Gym not found
        "500":
          description: Internal server error
    put:
      summary: Update a specific gym
      tags:
        - Gyms
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The ID of the gym to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                admins:
                  type: array
                  items:
                    type: string
                  description: An array of user IDs representing the gym's admins
                name:
                  type: string
                  description: The name of the gym
                location:
                  type: object
                  properties:
                    latitude:
                      type: number
                      description: The latitude of the gym's location
                    longitude:
                      type: number
                      description: The longitude of the gym's location
                    placeId:
                      type: string
                      description: The Google Maps place ID of the gym's location
                plans:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: The name of the membership plan
                      description:
                        type: string
                        description: A description of the membership plan
                      months:
                        type: integer
                        description: The number of months the plan covers
                      price:
                        type: number
                        description: The price of the membership plan
                      classes:
                        type: array
                        items:
                          type: string
                        description: >-
                          An array of class IDs included in the membership
                          plan
                      weekly:
                        type: integer
                        description: >-
                          The weekly limit of classes the user can attend with
                          this membership plan
                      monthly:
                        type: integer
                        description: >-
                          The monthly limit of classes the user can attend with
                          this membership plan
      responses:
        "200":
          description: Gym updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Gym"
        "404":
          description: Gym not found
        "500":
          description: Internal server error
    delete:
      summary: Delete a specific gym
      tags:
        - Gyms
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The ID of the gym to delete
      responses:
        "200":
          description: Gym deleted successfully
        "404":
          description: Gym not found
        "500":
          description: Internal server error
  /gyms/{gymId}/plans:
    post:
      summary: Create a new plan for a gym
      tags:
        - Plans
      security:
        - bearerAuth: []
      parameters:
        - name: gymId
          in: path
          required: true
          description: The ID of the gym
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the plan
                description:
                  type: string
                  description: The description of the plan
                price:
                  type: number
                  description: The price of the plan
                duration:
                  type: number
                  description: The duration of the plan in days
      responses:
        "201":
          description: Plan created successfully
        "404":
          description: Gym not found
        "500":
          description: Internal server error
    get:
      summary: Get all plans for a gym
      tags:
        - Plans
      security:
        - bearerAuth: []
      parameters:
        - name: gymId
          in: path
          required: true
          description: The ID of the gym
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
          description: Number of records per page
      responses:
        "200":
          description: List of plans retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Plan"
        "404":
          description: Gym not found
        "500":
          description: Internal server error
  /gyms/{gymId}/plans/{planId}:
    get:
      summary: Get a specific plan for a gym
      tags:
        - Plans
      security:
        - bearerAuth: []
      parameters:
        - name: gymId
          in: path
          required: true
          description: The ID of the gym
          schema:
            type: string
        - name: planId
          in: path
          required: true
          description: The ID of the plan
          schema:
            type: string
      responses:
        "200":
          description: Plan retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Plan"
        "404":
          description: Plan not found
        "500":
          description: Internal server error
    put:
      summary: Update a specific plan for a gym
      tags:
        - Plans
      security:
        - bearerAuth: []
      parameters:
        - name: gymId
          in: path
          required: true
          description: The ID of the gym
          schema:
            type: string
        - name: planId
          in: path
          required: true
          description: The ID of the plan
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Plan"
      responses:
        "200":
          description: Plan updated successfully
        "404":
          description: Plan not found
        "500":
          description: Internal server error
    delete:
      summary: Delete a specific plan for a gym
      tags:
        - Plans
      security:
        - bearerAuth: []
      parameters:
        - name: gymId
          in: path
          required: true
          description: The ID of the gym
          schema:
            type: string
        - name: planId
          in: path
          required: true
          description: The ID of the plan
          schema:
            type: string
      responses:
        "200":
          description: Plan deleted successfully
        "404":
          description: Plan not found
        "500":
          description: Internal server error
  /subscriptions:
    post:
      summary: Create a new subscription
      tags:
        - Subscriptions
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: The ID of the user this subscription belongs to
                gymId:
                  type: string
                  description: The ID of the gym this subscription is for
                planId:
                  type: string
                  description: The ID of the membership plan for this subscription
                total:
                  type: number
                  description: The total amount paid for this subscription
                startDate:
                  type: string
                  format: date
                  description: The start date of the subscription
                endDate:
                  type: string
                  format: date
                  description: The end date of the subscription
      responses:
        "201":
          description: Subscription created successfully
        "400":
          description: "Bad request (e.g., missing or invalid fields)"
        "500":
          description: Internal server error
    get:
      summary: Retrieve all subscriptions
      tags:
        - Subscriptions
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
          description: Number of records per page
      responses:
        "200":
          description: Subscriptions retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalSubscriptions:
                    type: integer
                  totalPages:
                    type: integer
                  currentPage:
                    type: integer
                  subscriptions:
                    type: array
                    items:
                      $ref: "#/components/schemas/Subscription"
        "500":
          description: Internal server error
  /subscriptions/{id}:
    get:
      summary: Retrieve a specific subscription
      tags:
        - Subscriptions
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The ID of the subscription to retrieve
      responses:
        "200":
          description: Subscription retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
        "404":
          description: Subscription not found
        "500":
          description: Internal server error
    put:
      summary: Update a specific subscription
      tags:
        - Subscriptions
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The ID of the subscription to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: The ID of the user this subscription belongs to
                gymId:
                  type: string
                  description: The ID of the gym this subscription is for
                planId:
                  type: string
                  description: The ID of the membership plan for this subscription
                total:
                  type: number
                  description: The total amount paid for this subscription
                startDate:
                  type: string
                  format: date
                  description: The start date of the subscription
                endDate:
                  type: string
                  format: date
                  description: The end date of the subscription
      responses:
        "200":
          description: Subscription updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
        "404":
          description: Subscription not found
        "500":
          description: Internal server error
    delete:
      summary: Delete a specific subscription
      tags:
        - Subscriptions
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The ID of the subscription to delete
      responses:
        "200":
          description: Subscription deleted successfully
        "404":
          description: Subscription not found
        "500":
          description: Internal server error
  /classes:
    get:
      summary: Retrieve all classes
      tags:
        - Classes
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
          description: Number of records per page
      responses:
        "200":
          description: Classes retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Class"
        "500":
          description: Internal server error
    post:
      summary: Create a new class
      tags:
        - Classes
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Class"
      responses:
        "201":
          description: Class created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Class"
        "500":
          description: Internal server error
  /classes/{id}:
    get:
      summary: Retrieve a specific class
      tags:
        - Classes
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The ID of the class to retrieve
      responses:
        "200":
          description: Class retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Class"
        "404":
          description: Class not found
        "500":
          description: Internal server error
    put:
      summary: Update a specific class
      tags:
        - Classes
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The ID of the class to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Class"
      responses:
        "200":
          description: Class updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Class"
        "404":
          description: Class not found
        "500":
          description: Internal server error
    delete:
      summary: Delete a specific class
      tags:
        - Classes
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The ID of the class to delete
      responses:
        "200":
          description: Class deleted successfully
        "404":
          description: Class not found
        "500":
          description: Internal server error
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Plan:
      type: object
      properties:
        name:
          type: string
          description: The name of the plan
        description:
          type: string
          description: The description of the plan
        months:
          type: number
          description: The number of months the plan covers
        price:
          type: number
          description: The price of the plan
        classes:
          type: array
          items:
            type: string
            format: objectId
          description: An array of class IDs included in the membership plan
        weekly:
          type: number
          description: The weekly limit of classes the user can attend with this membership plan
        monthly:
          type: number
          description: The monthly limit of classes the user can attend with this membership plan
      required:
        - name
        - description
    User:
      type: object
      properties:
        id:
          type: string
          description: The user ID
        name:
          type: string
          description: The first name of the user
        lastName:
          type: string
          description: The last name of the user
        email:
          type: string
          description: The email address of the user
        phone:
          type: string
          description: The phone number of the user
        personalId:
          type: string
          description: >-
            The personal ID of the user (e.g., social security number, national
            ID)
        roles:
          type: array
          items:
            type: string
          description: "The roles the user has (e.g., admin, member)"
    Gym:
      type: object
      properties:
        id:
          type: string
          description: The gym ID
        admins:
          type: array
          items:
            type: string
          description: An array of user IDs representing the gym's admins
        name:
          type: string
          description: The name of the gym
        location:
          type: object
          properties:
            latitude:
              type: number
              description: The latitude of the gym's location
            longitude:
              type: number
              description: The longitude of the gym's location
            placeId:
              type: string
              description: The Google Maps place ID of the gym's location
    Subscription:
      type: object
      properties:
        id:
          type: string
          description: The subscription ID
        userId:
          type: string
          description: The ID of the user this subscription belongs to
        gymId:
          type: string
          description: The ID of the gym this subscription is for
        planId:
          type: string
          description: The ID of the membership plan for this subscription
        total:
          type: number
          description: The total amount paid for this subscription
        startDate:
          type: string
          format: date
          description: The start date of the subscription
        endDate:
          type: string
          format: date
          description: The end date of the subscription
    Class:
      type: object
      properties:
        id:
          type: string
          description: The class ID
        name:
          type: string
          description: The name of the class
        instructor:
          type: string
          description: The ID of the instructor for the class
        gymId:
          type: string
          description: The ID of the gym where the class takes place
        startDate:
          type: string
          format: date-time
          description: The start date and time of the class
        endDate:
          type: string
          format: date-time
          description: The end date and time of the class
        capacity:
          type: integer
          description: The maximum number of participants for the class
        attendees:
          type: array
          items:
            type: string
            description: An array of user IDs representing the class attendees
